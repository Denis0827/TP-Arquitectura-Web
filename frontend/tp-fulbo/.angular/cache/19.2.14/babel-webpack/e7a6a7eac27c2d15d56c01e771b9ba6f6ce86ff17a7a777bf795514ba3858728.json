{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nlet TeamService = class TeamService {\n  http;\n  apiUrl = `${environment.apiUrl}/api/team`;\n  constructor(http) {\n    this.http = http;\n  }\n  getAllTeams() {\n    return this.http.get(this.apiUrl);\n  }\n  getTeamById(idTeam) {\n    return this.http.get(`${this.apiUrl}/${idTeam}`);\n  }\n  getTeamsByPlayer(idPlayer) {\n    return this.http.get(`${this.apiUrl}/players/${idPlayer}`);\n  }\n  createTeam(team) {\n    return this.http.post(this.apiUrl, team);\n  }\n  updateTeam(teamId, team) {\n    return this.http.put(`${this.apiUrl}/${teamId}`, team);\n  }\n  deleteTeam(teamId) {\n    return this.http.delete(`${this.apiUrl}/${teamId}`);\n  }\n  addPlayerToTeam(teamId, player) {\n    return this.http.post(`${this.apiUrl}/${teamId}/players`, player);\n  }\n  removePlayerFromTeam(teamId, playerId) {\n    return this.http.delete(`${this.apiUrl}/${teamId}/players/${playerId}`);\n  }\n  updatePlayerInTeam(teamId, playerId, player) {\n    return this.http.put(`${this.apiUrl}/${teamId}/players/${playerId}`, player);\n  }\n  static ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nTeamService = __decorate([Injectable({\n  providedIn: 'root'\n})], TeamService);\nexport { TeamService };","map":{"version":3,"names":["Injectable","HttpClient","environment","TeamService","http","apiUrl","constructor","getAllTeams","get","getTeamById","idTeam","getTeamsByPlayer","idPlayer","createTeam","team","post","updateTeam","teamId","put","deleteTeam","delete","addPlayerToTeam","player","removePlayerFromTeam","playerId","updatePlayerInTeam","__decorate","providedIn"],"sources":["/Users/gs/Desktop/GS/DITELLA/ARQUITECTURA WEB/TP-Arquitectura-Web/frontend/tp-fulbo/src/app/features/teams/services/team.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\nimport { Team, TeamResponse } from '../../models/team.model';\n\nexport interface Team {\n  id: number;\n  name: string;\n  description?: string;\n  coachId: number;\n  players: Player[];\n}\n\nexport interface Player {\n  id: number;\n  firstName: string;\n  lastName: string;\n  position: string;\n  number: number;\n}\n\nexport interface CreateTeamRequest {\n  name: string;\n  description?: string;\n  coachId: number;\n}\n\nexport interface UpdateTeamRequest {\n  name?: string;\n  description?: string;\n  coachId?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n  private apiUrl = `${environment.apiUrl}/api/team`;\n\n  constructor(private http: HttpClient) {}\n\n  getAllTeams(): Observable<Team[]> {\n    return this.http.get<Team[]>(this.apiUrl);\n  }\n\n  getTeamById(idTeam: number): Observable<Team> {\n    return this.http.get<Team>(`${this.apiUrl}/${idTeam}`);\n  }\n\n  getTeamsByPlayer(idPlayer: number): Observable<Team[]> {\n    return this.http.get<Team[]>(`${this.apiUrl}/players/${idPlayer}`);\n  }\n\n  createTeam(team: CreateTeamRequest): Observable<Team> {\n    return this.http.post<Team>(this.apiUrl, team);\n  }\n\n  updateTeam(teamId: number, team: UpdateTeamRequest): Observable<Team> {\n    return this.http.put<Team>(`${this.apiUrl}/${teamId}`, team);\n  }\n\n  deleteTeam(teamId: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${teamId}`);\n  }\n\n  addPlayerToTeam(teamId: number, player: Player): Observable<Team> {\n    return this.http.post<Team>(`${this.apiUrl}/${teamId}/players`, player);\n  }\n\n  removePlayerFromTeam(teamId: number, playerId: number): Observable<Team> {\n    return this.http.delete<Team>(`${this.apiUrl}/${teamId}/players/${playerId}`);\n  }\n\n  updatePlayerInTeam(teamId: number, playerId: number, player: Player): Observable<Team> {\n    return this.http.put<Team>(`${this.apiUrl}/${teamId}/players/${playerId}`, player);\n  }\n} "],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,sBAAsB;AAEjD,SAASC,WAAW,QAAQ,sCAAsC;AAkC3D,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EAGFC,IAAA;EAFZC,MAAM,GAAG,GAAGH,WAAW,CAACG,MAAM,WAAW;EAEjDC,YAAoBF,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCG,WAAWA,CAAA;IACT,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAS,IAAI,CAACH,MAAM,CAAC;EAC3C;EAEAI,WAAWA,CAACC,MAAc;IACxB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAO,GAAG,IAAI,CAACH,MAAM,IAAIK,MAAM,EAAE,CAAC;EACxD;EAEAC,gBAAgBA,CAACC,QAAgB;IAC/B,OAAO,IAAI,CAACR,IAAI,CAACI,GAAG,CAAS,GAAG,IAAI,CAACH,MAAM,YAAYO,QAAQ,EAAE,CAAC;EACpE;EAEAC,UAAUA,CAACC,IAAuB;IAChC,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAO,IAAI,CAACV,MAAM,EAAES,IAAI,CAAC;EAChD;EAEAE,UAAUA,CAACC,MAAc,EAAEH,IAAuB;IAChD,OAAO,IAAI,CAACV,IAAI,CAACc,GAAG,CAAO,GAAG,IAAI,CAACb,MAAM,IAAIY,MAAM,EAAE,EAAEH,IAAI,CAAC;EAC9D;EAEAK,UAAUA,CAACF,MAAc;IACvB,OAAO,IAAI,CAACb,IAAI,CAACgB,MAAM,CAAO,GAAG,IAAI,CAACf,MAAM,IAAIY,MAAM,EAAE,CAAC;EAC3D;EAEAI,eAAeA,CAACJ,MAAc,EAAEK,MAAc;IAC5C,OAAO,IAAI,CAAClB,IAAI,CAACW,IAAI,CAAO,GAAG,IAAI,CAACV,MAAM,IAAIY,MAAM,UAAU,EAAEK,MAAM,CAAC;EACzE;EAEAC,oBAAoBA,CAACN,MAAc,EAAEO,QAAgB;IACnD,OAAO,IAAI,CAACpB,IAAI,CAACgB,MAAM,CAAO,GAAG,IAAI,CAACf,MAAM,IAAIY,MAAM,YAAYO,QAAQ,EAAE,CAAC;EAC/E;EAEAC,kBAAkBA,CAACR,MAAc,EAAEO,QAAgB,EAAEF,MAAc;IACjE,OAAO,IAAI,CAAClB,IAAI,CAACc,GAAG,CAAO,GAAG,IAAI,CAACb,MAAM,IAAIY,MAAM,YAAYO,QAAQ,EAAE,EAAEF,MAAM,CAAC;EACpF;;;;;AAvCWnB,WAAW,GAAAuB,UAAA,EAHvB1B,UAAU,CAAC;EACV2B,UAAU,EAAE;CACb,CAAC,C,EACWxB,WAAW,CAwCvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}