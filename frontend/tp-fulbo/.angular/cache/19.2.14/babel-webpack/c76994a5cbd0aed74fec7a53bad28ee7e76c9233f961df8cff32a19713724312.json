{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nlet TeamService = class TeamService {\n  http = inject(HttpClient);\n  apiUrl = `${environment.apiUrl}/teams`;\n  constructor() {}\n  getAllTeams() {\n    return this.http.get(this.apiUrl);\n  }\n  getTeamById(teamId) {\n    return this.http.get(`${this.apiUrl}/${teamId}`);\n  }\n  createTeam(team) {\n    return this.http.post(this.apiUrl, team);\n  }\n  updateTeam(teamId, team) {\n    return this.http.put(`${this.apiUrl}/${teamId}`, team);\n  }\n  deleteTeam(teamId) {\n    return this.http.delete(`${this.apiUrl}/${teamId}`);\n  }\n  addPlayerToTeam(teamId, player) {\n    return this.http.post(`${this.apiUrl}/${teamId}/players`, player);\n  }\n  removePlayerFromTeam(teamId, playerId) {\n    return this.http.delete(`${this.apiUrl}/${teamId}/players/${playerId}`);\n  }\n  updatePlayerInTeam(teamId, playerId, player) {\n    return this.http.put(`${this.apiUrl}/${teamId}/players/${playerId}`, player);\n  }\n  static ctorParameters = () => [];\n};\nTeamService = __decorate([Injectable({\n  providedIn: 'root'\n})], TeamService);\nexport { TeamService };","map":{"version":3,"names":["Injectable","inject","HttpClient","environment","TeamService","http","apiUrl","constructor","getAllTeams","get","getTeamById","teamId","createTeam","team","post","updateTeam","put","deleteTeam","delete","addPlayerToTeam","player","removePlayerFromTeam","playerId","updatePlayerInTeam","__decorate","providedIn"],"sources":["/Users/gs/Desktop/GS/DITELLA/ARQUITECTURA WEB/TP-Arquitectura-Web/frontend/tp-fulbo/src/app/features/teams/services/team.service.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\n\nexport interface Team {\n  id: number;\n  name: string;\n  description?: string;\n  coachId: number;\n  players: Player[];\n}\n\nexport interface Player {\n  id: number;\n  firstName: string;\n  lastName: string;\n  position: string;\n  number: number;\n}\n\nexport interface CreateTeamRequest {\n  name: string;\n  description?: string;\n  coachId: number;\n}\n\nexport interface UpdateTeamRequest {\n  name?: string;\n  description?: string;\n  coachId?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n  private http = inject(HttpClient);\n  private apiUrl = `${environment.apiUrl}/teams`;\n\n  constructor() {}\n\n  getAllTeams(): Observable<Team[]> {\n    return this.http.get<Team[]>(this.apiUrl);\n  }\n\n  getTeamById(teamId: number): Observable<Team> {\n    return this.http.get<Team>(`${this.apiUrl}/${teamId}`);\n  }\n\n  createTeam(team: CreateTeamRequest): Observable<Team> {\n    return this.http.post<Team>(this.apiUrl, team);\n  }\n\n  updateTeam(teamId: number, team: UpdateTeamRequest): Observable<Team> {\n    return this.http.put<Team>(`${this.apiUrl}/${teamId}`, team);\n  }\n\n  deleteTeam(teamId: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${teamId}`);\n  }\n\n  addPlayerToTeam(teamId: number, player: Player): Observable<Team> {\n    return this.http.post<Team>(`${this.apiUrl}/${teamId}/players`, player);\n  }\n\n  removePlayerFromTeam(teamId: number, playerId: number): Observable<Team> {\n    return this.http.delete<Team>(`${this.apiUrl}/${teamId}/players/${playerId}`);\n  }\n\n  updatePlayerInTeam(teamId: number, playerId: number, player: Player): Observable<Team> {\n    return this.http.put<Team>(`${this.apiUrl}/${teamId}/players/${playerId}`, player);\n  }\n} "],"mappings":";AAAA,SAASA,UAAU,EAAEC,MAAM,QAAQ,eAAe;AAClD,SAASC,UAAU,QAAQ,sBAAsB;AAEjD,SAASC,WAAW,QAAQ,mCAAmC;AAiCxD,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EACdC,IAAI,GAAGJ,MAAM,CAACC,UAAU,CAAC;EACzBI,MAAM,GAAG,GAAGH,WAAW,CAACG,MAAM,QAAQ;EAE9CC,YAAA,GAAe;EAEfC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAS,IAAI,CAACH,MAAM,CAAC;EAC3C;EAEAI,WAAWA,CAACC,MAAc;IACxB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAO,GAAG,IAAI,CAACH,MAAM,IAAIK,MAAM,EAAE,CAAC;EACxD;EAEAC,UAAUA,CAACC,IAAuB;IAChC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAO,IAAI,CAACR,MAAM,EAAEO,IAAI,CAAC;EAChD;EAEAE,UAAUA,CAACJ,MAAc,EAAEE,IAAuB;IAChD,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAO,GAAG,IAAI,CAACV,MAAM,IAAIK,MAAM,EAAE,EAAEE,IAAI,CAAC;EAC9D;EAEAI,UAAUA,CAACN,MAAc;IACvB,OAAO,IAAI,CAACN,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACZ,MAAM,IAAIK,MAAM,EAAE,CAAC;EAC3D;EAEAQ,eAAeA,CAACR,MAAc,EAAES,MAAc;IAC5C,OAAO,IAAI,CAACf,IAAI,CAACS,IAAI,CAAO,GAAG,IAAI,CAACR,MAAM,IAAIK,MAAM,UAAU,EAAES,MAAM,CAAC;EACzE;EAEAC,oBAAoBA,CAACV,MAAc,EAAEW,QAAgB;IACnD,OAAO,IAAI,CAACjB,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACZ,MAAM,IAAIK,MAAM,YAAYW,QAAQ,EAAE,CAAC;EAC/E;EAEAC,kBAAkBA,CAACZ,MAAc,EAAEW,QAAgB,EAAEF,MAAc;IACjE,OAAO,IAAI,CAACf,IAAI,CAACW,GAAG,CAAO,GAAG,IAAI,CAACV,MAAM,IAAIK,MAAM,YAAYW,QAAQ,EAAE,EAAEF,MAAM,CAAC;EACpF;;;AApCWhB,WAAW,GAAAoB,UAAA,EAHvBxB,UAAU,CAAC;EACVyB,UAAU,EAAE;CACb,CAAC,C,EACWrB,WAAW,CAqCvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}