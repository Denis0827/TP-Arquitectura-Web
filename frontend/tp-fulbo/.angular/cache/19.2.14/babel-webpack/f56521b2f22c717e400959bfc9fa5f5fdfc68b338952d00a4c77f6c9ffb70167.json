{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nlet UserService = class UserService {\n  http;\n  apiUrl = `${environment.apiUrl}/api/user`;\n  constructor(http) {\n    this.http = http;\n  }\n  // Registro de jugador\n  registerPlayer(request) {\n    return this.http.post(`${this.apiUrl}/register`, request);\n  }\n  // Login\n  login(request) {\n    return this.http.post(`${this.apiUrl}/login`, request);\n  }\n  // Convertir jugador a coach\n  createCoach(playerId) {\n    return this.http.post(`${this.apiUrl}/players/${playerId}/coach`, {});\n  }\n  // Obtener todos los coaches\n  getAllCoaches() {\n    return this.http.get(`${this.apiUrl}/coaches`);\n  }\n  // Obtener coach por ID\n  getCoachById(idCoach) {\n    return this.http.get(`${this.apiUrl}/coaches/${idCoach}`);\n  }\n  // Eliminar coach\n  deleteCoach(idCoach) {\n    return this.http.delete(`${this.apiUrl}/coaches/${idCoach}`);\n  }\n  // Obtener todos los jugadores\n  getAllPlayers() {\n    return this.http.get(`${this.apiUrl}/players`);\n  }\n  // Obtener jugador por ID\n  getPlayerById(idPlayer) {\n    return this.http.get(`${this.apiUrl}/players/${idPlayer}`);\n  }\n  // Eliminar jugador\n  deletePlayer(idPlayer) {\n    return this.http.delete(`${this.apiUrl}/players/${idPlayer}`);\n  }\n  static ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nUserService = __decorate([Injectable({\n  providedIn: 'root'\n})], UserService);\nexport { UserService };","map":{"version":3,"names":["Injectable","HttpClient","environment","UserService","http","apiUrl","constructor","registerPlayer","request","post","login","createCoach","playerId","getAllCoaches","get","getCoachById","idCoach","deleteCoach","delete","getAllPlayers","getPlayerById","idPlayer","deletePlayer","__decorate","providedIn"],"sources":["/Users/gs/Desktop/GS/DITELLA/ARQUITECTURA WEB/TP-Arquitectura-Web/frontend/tp-fulbo/src/app/services/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n// Import models\nimport { Player, Coach } from '../models/user.model';\nimport { PlayerRequest, LoginRequest } from '../models/requests/player.request';\nimport { LoginResponse, PlayerResponse, CoachResponse } from '../models/responses/login.response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private apiUrl = `${environment.apiUrl}/api/user`;\n\n  constructor(private http: HttpClient) {}\n\n  // Registro de jugador\n  registerPlayer(request: PlayerRequest): Observable<PlayerResponse> {\n    return this.http.post<PlayerResponse>(`${this.apiUrl}/register`, request);\n  }\n\n  // Login\n  login(request: LoginRequest): Observable<LoginResponse> {\n    return this.http.post<LoginResponse>(`${this.apiUrl}/login`, request);\n  }\n\n  // Convertir jugador a coach\n  createCoach(playerId: number): Observable<CoachResponse> {\n    return this.http.post<CoachResponse>(`${this.apiUrl}/players/${playerId}/coach`, {});\n  }\n\n  // Obtener todos los coaches\n  getAllCoaches(): Observable<Coach[]> {\n    return this.http.get<Coach[]>(`${this.apiUrl}/coaches`);\n  }\n\n  // Obtener coach por ID\n  getCoachById(idCoach: number): Observable<Coach> {\n    return this.http.get<Coach>(`${this.apiUrl}/coaches/${idCoach}`);\n  }\n\n  // Eliminar coach\n  deleteCoach(idCoach: number): Observable<CoachResponse> {\n    return this.http.delete<CoachResponse>(`${this.apiUrl}/coaches/${idCoach}`);\n  }\n\n  // Obtener todos los jugadores\n  getAllPlayers(): Observable<Player[]> {\n    return this.http.get<Player[]>(`${this.apiUrl}/players`);\n  }\n\n  // Obtener jugador por ID\n  getPlayerById(idPlayer: number): Observable<Player> {\n    return this.http.get<Player>(`${this.apiUrl}/players/${idPlayer}`);\n  }\n\n  // Eliminar jugador\n  deletePlayer(idPlayer: number): Observable<CoachResponse> {\n    return this.http.delete<CoachResponse>(`${this.apiUrl}/players/${idPlayer}`);\n  }\n} "],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,sBAAsB;AAEjD,SAASC,WAAW,QAAQ,gCAAgC;AAUrD,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EAGFC,IAAA;EAFZC,MAAM,GAAG,GAAGH,WAAW,CAACG,MAAM,WAAW;EAEjDC,YAAoBF,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvC;EACAG,cAAcA,CAACC,OAAsB;IACnC,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAiB,GAAG,IAAI,CAACJ,MAAM,WAAW,EAAEG,OAAO,CAAC;EAC3E;EAEA;EACAE,KAAKA,CAACF,OAAqB;IACzB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAgB,GAAG,IAAI,CAACJ,MAAM,QAAQ,EAAEG,OAAO,CAAC;EACvE;EAEA;EACAG,WAAWA,CAACC,QAAgB;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACK,IAAI,CAAgB,GAAG,IAAI,CAACJ,MAAM,YAAYO,QAAQ,QAAQ,EAAE,EAAE,CAAC;EACtF;EAEA;EACAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAU,GAAG,IAAI,CAACT,MAAM,UAAU,CAAC;EACzD;EAEA;EACAU,YAAYA,CAACC,OAAe;IAC1B,OAAO,IAAI,CAACZ,IAAI,CAACU,GAAG,CAAQ,GAAG,IAAI,CAACT,MAAM,YAAYW,OAAO,EAAE,CAAC;EAClE;EAEA;EACAC,WAAWA,CAACD,OAAe;IACzB,OAAO,IAAI,CAACZ,IAAI,CAACc,MAAM,CAAgB,GAAG,IAAI,CAACb,MAAM,YAAYW,OAAO,EAAE,CAAC;EAC7E;EAEA;EACAG,aAAaA,CAAA;IACX,OAAO,IAAI,CAACf,IAAI,CAACU,GAAG,CAAW,GAAG,IAAI,CAACT,MAAM,UAAU,CAAC;EAC1D;EAEA;EACAe,aAAaA,CAACC,QAAgB;IAC5B,OAAO,IAAI,CAACjB,IAAI,CAACU,GAAG,CAAS,GAAG,IAAI,CAACT,MAAM,YAAYgB,QAAQ,EAAE,CAAC;EACpE;EAEA;EACAC,YAAYA,CAACD,QAAgB;IAC3B,OAAO,IAAI,CAACjB,IAAI,CAACc,MAAM,CAAgB,GAAG,IAAI,CAACb,MAAM,YAAYgB,QAAQ,EAAE,CAAC;EAC9E;;;;;AAhDWlB,WAAW,GAAAoB,UAAA,EAHvBvB,UAAU,CAAC;EACVwB,UAAU,EAAE;CACb,CAAC,C,EACWrB,WAAW,CAiDvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}