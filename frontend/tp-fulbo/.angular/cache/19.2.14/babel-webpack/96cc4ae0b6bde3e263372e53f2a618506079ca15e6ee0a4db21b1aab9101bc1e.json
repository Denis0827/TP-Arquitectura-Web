{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nlet UserService = class UserService {\n  http = inject(HttpClient);\n  apiUrl = `${environment.apiUrl}/users`;\n  constructor() {}\n  getCurrentUser() {\n    return this.http.get(`${this.apiUrl}/me`);\n  }\n  updateProfile(userId, data) {\n    return this.http.put(`${this.apiUrl}/${userId}`, data);\n  }\n  changePassword(userId, data) {\n    return this.http.post(`${this.apiUrl}/${userId}/change-password`, data);\n  }\n  getAllUsers() {\n    return this.http.get(this.apiUrl);\n  }\n  getUserById(userId) {\n    return this.http.get(`${this.apiUrl}/${userId}`);\n  }\n  updateUserRole(userId, role) {\n    return this.http.put(`${this.apiUrl}/${userId}/role`, {\n      role\n    });\n  }\n  static ctorParameters = () => [];\n};\nUserService = __decorate([Injectable({\n  providedIn: 'root'\n})], UserService);\nexport { UserService };","map":{"version":3,"names":["Injectable","inject","HttpClient","environment","UserService","http","apiUrl","constructor","getCurrentUser","get","updateProfile","userId","data","put","changePassword","post","getAllUsers","getUserById","updateUserRole","role","__decorate","providedIn"],"sources":["/Users/gs/Desktop/GS/DITELLA/ARQUITECTURA WEB/TP-Arquitectura-Web/frontend/tp-fulbo/src/app/features/users/services/user.service.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\n\nexport interface User {\n  id: number;\n  username: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n}\n\nexport interface UpdateUserRequest {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n}\n\nexport interface ChangePasswordRequest {\n  currentPassword: string;\n  newPassword: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private http = inject(HttpClient);\n  private apiUrl = `${environment.apiUrl}/users`;\n\n  constructor() {}\n\n  getCurrentUser(): Observable<User> {\n    return this.http.get<User>(`${this.apiUrl}/me`);\n  }\n\n  updateProfile(userId: number, data: UpdateUserRequest): Observable<User> {\n    return this.http.put<User>(`${this.apiUrl}/${userId}`, data);\n  }\n\n  changePassword(userId: number, data: ChangePasswordRequest): Observable<void> {\n    return this.http.post<void>(`${this.apiUrl}/${userId}/change-password`, data);\n  }\n\n  getAllUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.apiUrl);\n  }\n\n  getUserById(userId: number): Observable<User> {\n    return this.http.get<User>(`${this.apiUrl}/${userId}`);\n  }\n\n  updateUserRole(userId: number, role: string): Observable<User> {\n    return this.http.put<User>(`${this.apiUrl}/${userId}/role`, { role });\n  }\n} "],"mappings":";AAAA,SAASA,UAAU,EAAEC,MAAM,QAAQ,eAAe;AAClD,SAASC,UAAU,QAAQ,sBAAsB;AAEjD,SAASC,WAAW,QAAQ,mCAAmC;AAyBxD,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EACdC,IAAI,GAAGJ,MAAM,CAACC,UAAU,CAAC;EACzBI,MAAM,GAAG,GAAGH,WAAW,CAACG,MAAM,QAAQ;EAE9CC,YAAA,GAAe;EAEfC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAO,GAAG,IAAI,CAACH,MAAM,KAAK,CAAC;EACjD;EAEAI,aAAaA,CAACC,MAAc,EAAEC,IAAuB;IACnD,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAO,GAAG,IAAI,CAACP,MAAM,IAAIK,MAAM,EAAE,EAAEC,IAAI,CAAC;EAC9D;EAEAE,cAAcA,CAACH,MAAc,EAAEC,IAA2B;IACxD,OAAO,IAAI,CAACP,IAAI,CAACU,IAAI,CAAO,GAAG,IAAI,CAACT,MAAM,IAAIK,MAAM,kBAAkB,EAAEC,IAAI,CAAC;EAC/E;EAEAI,WAAWA,CAAA;IACT,OAAO,IAAI,CAACX,IAAI,CAACI,GAAG,CAAS,IAAI,CAACH,MAAM,CAAC;EAC3C;EAEAW,WAAWA,CAACN,MAAc;IACxB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAO,GAAG,IAAI,CAACH,MAAM,IAAIK,MAAM,EAAE,CAAC;EACxD;EAEAO,cAAcA,CAACP,MAAc,EAAEQ,IAAY;IACzC,OAAO,IAAI,CAACd,IAAI,CAACQ,GAAG,CAAO,GAAG,IAAI,CAACP,MAAM,IAAIK,MAAM,OAAO,EAAE;MAAEQ;IAAI,CAAE,CAAC;EACvE;;;AA5BWf,WAAW,GAAAgB,UAAA,EAHvBpB,UAAU,CAAC;EACVqB,UAAU,EAAE;CACb,CAAC,C,EACWjB,WAAW,CA6BvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}