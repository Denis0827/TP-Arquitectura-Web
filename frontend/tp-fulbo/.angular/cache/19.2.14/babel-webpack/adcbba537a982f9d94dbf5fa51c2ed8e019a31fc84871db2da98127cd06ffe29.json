{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nlet MatchService = class MatchService {\n  http;\n  apiUrl = `${environment.apiUrl}/api/match`;\n  constructor(http) {\n    this.http = http;\n  }\n  // Crear un nuevo partido\n  createMatch(idCoach, request) {\n    return this.http.post(`${this.apiUrl}/coaches/${idCoach}/createMatch`, request);\n  }\n  // Obtener todos los partidos\n  getAllMatches() {\n    return this.http.get(`${this.apiUrl}`);\n  }\n  // Obtener partido por ID\n  getMatchById(idMatch) {\n    return this.http.get(`${this.apiUrl}/${idMatch}`);\n  }\n  // Obtener partidos por categoría\n  getMatchesByCategory(idCategory) {\n    return this.http.get(`${this.apiUrl}/category/${idCategory}`);\n  }\n  // Obtener partidos por coach\n  getMatchesByCoach(idCoach) {\n    return this.http.get(`${this.apiUrl}/coaches/${idCoach}`);\n  }\n  // Obtener partidos por jugador\n  getMatchesByPlayer(idPlayer) {\n    return this.http.get(`${this.apiUrl}/players/${idPlayer}`);\n  }\n  // Eliminar un partido\n  deleteMatch(idMatch) {\n    return this.http.delete(`${this.apiUrl}/${idMatch}`);\n  }\n  static ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nMatchService = __decorate([Injectable({\n  providedIn: 'root'\n})], MatchService);\nexport { MatchService };","map":{"version":3,"names":["Injectable","HttpClient","environment","MatchService","http","apiUrl","constructor","createMatch","idCoach","request","post","getAllMatches","get","getMatchById","idMatch","getMatchesByCategory","idCategory","getMatchesByCoach","getMatchesByPlayer","idPlayer","deleteMatch","delete","__decorate","providedIn"],"sources":["/Users/gs/Desktop/GS/DITELLA/ARQUITECTURA WEB/TP-Arquitectura-Web/frontend/tp-fulbo/src/app/services/match.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Match, CreateMatchRequest, MatchResponse } from '../models/match.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n  private apiUrl = `${environment.apiUrl}/api/match`;\n\n  constructor(private http: HttpClient) {}\n\n  // Crear un nuevo partido\n  createMatch(idCoach: number, request: CreateMatchRequest): Observable<MatchResponse> {\n    return this.http.post<MatchResponse>(`${this.apiUrl}/coaches/${idCoach}/createMatch`, request);\n  }\n\n  // Obtener todos los partidos\n  getAllMatches(): Observable<Match[]> {\n    return this.http.get<Match[]>(`${this.apiUrl}`);\n  }\n\n  // Obtener partido por ID\n  getMatchById(idMatch: number): Observable<Match> {\n    return this.http.get<Match>(`${this.apiUrl}/${idMatch}`);\n  }\n\n  // Obtener partidos por categoría\n  getMatchesByCategory(idCategory: number): Observable<Match[]> {\n    return this.http.get<Match[]>(`${this.apiUrl}/category/${idCategory}`);\n  }\n\n  // Obtener partidos por coach\n  getMatchesByCoach(idCoach: number): Observable<Match[]> {\n    return this.http.get<Match[]>(`${this.apiUrl}/coaches/${idCoach}`);\n  }\n\n  // Obtener partidos por jugador\n  getMatchesByPlayer(idPlayer: number): Observable<Match[]> {\n    return this.http.get<Match[]>(`${this.apiUrl}/players/${idPlayer}`);\n  }\n\n  // Eliminar un partido\n  deleteMatch(idMatch: number): Observable<string> {\n    return this.http.delete<string>(`${this.apiUrl}/${idMatch}`);\n  }\n} "],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,sBAAsB;AAEjD,SAASC,WAAW,QAAQ,gCAAgC;AAMrD,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAGHC,IAAA;EAFZC,MAAM,GAAG,GAAGH,WAAW,CAACG,MAAM,YAAY;EAElDC,YAAoBF,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvC;EACAG,WAAWA,CAACC,OAAe,EAAEC,OAA2B;IACtD,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAgB,GAAG,IAAI,CAACL,MAAM,YAAYG,OAAO,cAAc,EAAEC,OAAO,CAAC;EAChG;EAEA;EACAE,aAAaA,CAAA;IACX,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAU,GAAG,IAAI,CAACP,MAAM,EAAE,CAAC;EACjD;EAEA;EACAQ,YAAYA,CAACC,OAAe;IAC1B,OAAO,IAAI,CAACV,IAAI,CAACQ,GAAG,CAAQ,GAAG,IAAI,CAACP,MAAM,IAAIS,OAAO,EAAE,CAAC;EAC1D;EAEA;EACAC,oBAAoBA,CAACC,UAAkB;IACrC,OAAO,IAAI,CAACZ,IAAI,CAACQ,GAAG,CAAU,GAAG,IAAI,CAACP,MAAM,aAAaW,UAAU,EAAE,CAAC;EACxE;EAEA;EACAC,iBAAiBA,CAACT,OAAe;IAC/B,OAAO,IAAI,CAACJ,IAAI,CAACQ,GAAG,CAAU,GAAG,IAAI,CAACP,MAAM,YAAYG,OAAO,EAAE,CAAC;EACpE;EAEA;EACAU,kBAAkBA,CAACC,QAAgB;IACjC,OAAO,IAAI,CAACf,IAAI,CAACQ,GAAG,CAAU,GAAG,IAAI,CAACP,MAAM,YAAYc,QAAQ,EAAE,CAAC;EACrE;EAEA;EACAC,WAAWA,CAACN,OAAe;IACzB,OAAO,IAAI,CAACV,IAAI,CAACiB,MAAM,CAAS,GAAG,IAAI,CAAChB,MAAM,IAAIS,OAAO,EAAE,CAAC;EAC9D;;;;;AAtCWX,YAAY,GAAAmB,UAAA,EAHxBtB,UAAU,CAAC;EACVuB,UAAU,EAAE;CACb,CAAC,C,EACWpB,YAAY,CAuCxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}