{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nlet MatchService = class MatchService {\n  http = inject(HttpClient);\n  apiUrl = `${environment.apiUrl}/matches`;\n  constructor() {}\n  getAllMatches() {\n    return this.http.get(this.apiUrl);\n  }\n  getMatchById(matchId) {\n    return this.http.get(`${this.apiUrl}/${matchId}`);\n  }\n  getTeamMatches(teamId) {\n    return this.http.get(`${this.apiUrl}/team/${teamId}`);\n  }\n  createMatch(match) {\n    return this.http.post(this.apiUrl, match);\n  }\n  updateMatch(matchId, match) {\n    return this.http.put(`${this.apiUrl}/${matchId}`, match);\n  }\n  deleteMatch(matchId) {\n    return this.http.delete(`${this.apiUrl}/${matchId}`);\n  }\n  updateMatchScore(matchId, homeTeamScore, awayTeamScore) {\n    return this.http.put(`${this.apiUrl}/${matchId}/score`, {\n      homeTeamScore,\n      awayTeamScore\n    });\n  }\n  updateMatchStatus(matchId, status) {\n    return this.http.put(`${this.apiUrl}/${matchId}/status`, {\n      status\n    });\n  }\n  static ctorParameters = () => [];\n};\nMatchService = __decorate([Injectable({\n  providedIn: 'root'\n})], MatchService);\nexport { MatchService };","map":{"version":3,"names":["Injectable","inject","HttpClient","environment","MatchService","http","apiUrl","constructor","getAllMatches","get","getMatchById","matchId","getTeamMatches","teamId","createMatch","match","post","updateMatch","put","deleteMatch","delete","updateMatchScore","homeTeamScore","awayTeamScore","updateMatchStatus","status","__decorate","providedIn"],"sources":["/Users/gs/Desktop/GS/DITELLA/ARQUITECTURA WEB/TP-Arquitectura-Web/frontend/tp-fulbo/src/app/features/matches/services/match.service.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\n\nexport interface Match {\n  id: number;\n  homeTeamId: number;\n  awayTeamId: number;\n  date: string;\n  time: string;\n  location: string;\n  status: 'SCHEDULED' | 'IN_PROGRESS' | 'COMPLETED' | 'CANCELLED';\n  homeTeamScore?: number;\n  awayTeamScore?: number;\n}\n\nexport interface CreateMatchRequest {\n  homeTeamId: number;\n  awayTeamId: number;\n  date: string;\n  time: string;\n  location: string;\n}\n\nexport interface UpdateMatchRequest {\n  date?: string;\n  time?: string;\n  location?: string;\n  status?: Match['status'];\n  homeTeamScore?: number;\n  awayTeamScore?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n  private http = inject(HttpClient);\n  private apiUrl = `${environment.apiUrl}/matches`;\n\n  constructor() {}\n\n  getAllMatches(): Observable<Match[]> {\n    return this.http.get<Match[]>(this.apiUrl);\n  }\n\n  getMatchById(matchId: number): Observable<Match> {\n    return this.http.get<Match>(`${this.apiUrl}/${matchId}`);\n  }\n\n  getTeamMatches(teamId: number): Observable<Match[]> {\n    return this.http.get<Match[]>(`${this.apiUrl}/team/${teamId}`);\n  }\n\n  createMatch(match: CreateMatchRequest): Observable<Match> {\n    return this.http.post<Match>(this.apiUrl, match);\n  }\n\n  updateMatch(matchId: number, match: UpdateMatchRequest): Observable<Match> {\n    return this.http.put<Match>(`${this.apiUrl}/${matchId}`, match);\n  }\n\n  deleteMatch(matchId: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${matchId}`);\n  }\n\n  updateMatchScore(matchId: number, homeTeamScore: number, awayTeamScore: number): Observable<Match> {\n    return this.http.put<Match>(`${this.apiUrl}/${matchId}/score`, {\n      homeTeamScore,\n      awayTeamScore\n    });\n  }\n\n  updateMatchStatus(matchId: number, status: Match['status']): Observable<Match> {\n    return this.http.put<Match>(`${this.apiUrl}/${matchId}/status`, { status });\n  }\n} "],"mappings":";AAAA,SAASA,UAAU,EAAEC,MAAM,QAAQ,eAAe;AAClD,SAASC,UAAU,QAAQ,sBAAsB;AAEjD,SAASC,WAAW,QAAQ,sCAAsC;AAkC3D,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EACfC,IAAI,GAAGJ,MAAM,CAACC,UAAU,CAAC;EACzBI,MAAM,GAAG,GAAGH,WAAW,CAACG,MAAM,UAAU;EAEhDC,YAAA,GAAe;EAEfC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAU,IAAI,CAACH,MAAM,CAAC;EAC5C;EAEAI,YAAYA,CAACC,OAAe;IAC1B,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAQ,GAAG,IAAI,CAACH,MAAM,IAAIK,OAAO,EAAE,CAAC;EAC1D;EAEAC,cAAcA,CAACC,MAAc;IAC3B,OAAO,IAAI,CAACR,IAAI,CAACI,GAAG,CAAU,GAAG,IAAI,CAACH,MAAM,SAASO,MAAM,EAAE,CAAC;EAChE;EAEAC,WAAWA,CAACC,KAAyB;IACnC,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAQ,IAAI,CAACV,MAAM,EAAES,KAAK,CAAC;EAClD;EAEAE,WAAWA,CAACN,OAAe,EAAEI,KAAyB;IACpD,OAAO,IAAI,CAACV,IAAI,CAACa,GAAG,CAAQ,GAAG,IAAI,CAACZ,MAAM,IAAIK,OAAO,EAAE,EAAEI,KAAK,CAAC;EACjE;EAEAI,WAAWA,CAACR,OAAe;IACzB,OAAO,IAAI,CAACN,IAAI,CAACe,MAAM,CAAO,GAAG,IAAI,CAACd,MAAM,IAAIK,OAAO,EAAE,CAAC;EAC5D;EAEAU,gBAAgBA,CAACV,OAAe,EAAEW,aAAqB,EAAEC,aAAqB;IAC5E,OAAO,IAAI,CAAClB,IAAI,CAACa,GAAG,CAAQ,GAAG,IAAI,CAACZ,MAAM,IAAIK,OAAO,QAAQ,EAAE;MAC7DW,aAAa;MACbC;KACD,CAAC;EACJ;EAEAC,iBAAiBA,CAACb,OAAe,EAAEc,MAAuB;IACxD,OAAO,IAAI,CAACpB,IAAI,CAACa,GAAG,CAAQ,GAAG,IAAI,CAACZ,MAAM,IAAIK,OAAO,SAAS,EAAE;MAAEc;IAAM,CAAE,CAAC;EAC7E;;;AAvCWrB,YAAY,GAAAsB,UAAA,EAHxB1B,UAAU,CAAC;EACV2B,UAAU,EAAE;CACb,CAAC,C,EACWvB,YAAY,CAwCxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}